struct Axial {
    Q: i32,
    R: i32,
}

struct HexagonData {
    Owned: map {[Axial]: Color3},
    Selected: map {[Axial]: Color3},
}

event HexagonsColored {
    From: Server,
    Type: Reliable,
    Call: SingleAsync,
    Data: (Color3?, Axial[]),
}

event HexagonsSelected {
    From: Server,
    Type: Reliable,
    Call: SingleAsync,
    Data: (Color3?, Axial[]),
}

event PlayerKilled {
    From: Server,
    Type: Reliable,
    Call: SingleAsync,
    Data: (Instance(Player), Instance(Player)),
}

event PlayerCrowned {
    From: Server,
    Type: Reliable,
    Call: SingleAsync,
    Data: Instance(Player)?,
}

event WinnerSeconds {
    From: Server,
    Type: Reliable,
    Call: SingleAsync,
    Data: (Instance(Player)?, i32),
}

event PlayerWon {
    From: Server,
    Type: Reliable,
    Call: SingleAsync,
    Data: Instance(Player),
}

event ClaimEffect {
    From: Server,
    Type: Reliable,
    Call: SingleAsync,
    Data: (i32, i32),
}
